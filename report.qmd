---
title: "Ideal Body Type for Olympic Athletes"
subtitle: "Report"
format: html
editor: visual
execute:
  echo: true
---

```{r}
#| label: packages
#| message: false
#| warning: false

library(tidyverse)
library(tidymodels)
```

## ABSTRACT - CATHERINE


## INTRODUCTION - DONE

For this research project, we chose the topic of Olympic athletes from the sports of Swimming and Gymnastics. We are looking into the specific variables of age, height, and weight to see how these affect performance at a high level, and how these vary across the two sports. As such, our research question is: how do factors like age, height, and weight correlate with medal success rate across gymnastics and swimming? For this question, we hypothesize that the ideal height, weight, and age to win a medal will all be greater in swimming than in gymnastics.

To answer this research question, we will use the relevant variables of age, height, weight, medal won, sex, and sport. The numerical variables are age (in years), height (in centimeters), and weight (in kilograms). The character variables we are using are medal won, sex, and sport. For our analysis, we will filter the data set to only include gymnastics and swimming, the sports we are interested in analyzing.

We found this data set online at Kaggle, but the original data was from www.sports-reference.com. It was researched by a group of Olympic history enthusiasts and compiled into the data set format using R by Randi H. Griffin. The data was uploaded to the Kaggle website in 2018.

Using this data set, there are minimal to no ethical concerns, as this data was collected from a publicly accessible site. Additionally, all of this data was able be compiled by anyone, as Olympic athletes and their medals are also public information. We did not interview or collect any information ourselves, and their is no private health information or other private information available in this data. As such, there are no risks to the participants in our data collection and use of this data.

Each case in this data set corresponds to an individual athlete competing in an individual Olympic event between the years of 1896 and 2016. While we are only using the variables described above, this data set also includes team, year, games, city, and event for each case.

For this research topic, we will have to view which ages, heights, and weights have received medals. I would hypothesize that for each separate sport, there is a different normal distribution for ages, heights, and weights that have medal success rates, showing an ideal age, height, and weight for each sport we visualize.

# METHODOLOGY

## justify the choice of statistical method(s) used to answer your research question

To answer our research question, we used statistical methods of using our olympic data set and filtering it to only include the sports Female and Male Gymnastics, and Female and Male Swimming. From there, we filtered by only the rows that have Ages, Heights, and Weights. We then mapped out the height and weight for every olympian in these sports, then only the medalists, and finally faceted by which medal the olympians won. From there, using only the medalists, we found the mean and median of each category and height, weight, and age and visualized the mean. We also found a 99% confidence interval using the bootstrap method for the true population parameter of each of theses subcategories.

```{r}
#| label: data
#| message: false
#| warning: false

olympic_data <- read_csv("athlete_events.csv")
```

```{r}
#| label: filter

data <- olympic_data |>
  filter(Sport == "Swimming" | Sport == "Gymnastics") |>
  select(Sex, Age, Height, Weight, Medal, Sport) |>
  filter(!is.na(Age)) |>
  filter(!is.na(Height)) |>
  filter(!is.na(Weight)) |>
  mutate(Category = case_when(
    Sex == "F" & Sport == "Gymnastics" ~ "Female Gymnastics",
    Sex == "F" & Sport == "Swimming" ~ "Female Swimming",
    Sex == "M" & Sport == "Gymnastics" ~ "Male Gymnastics",
    Sex == "M" & Sport == "Swimming" ~ "Male Swimming")) |>
  mutate(Points = case_when(Medal == "Gold" ~ 3,
                            Medal == "Silver" ~ 2,
                            Medal == "Bronze" ~ 1,
                            is.na(Medal) ~ 0)) 

data

```

```{r}
#| label: visualization

data |>
  ggplot(
    aes(x = Height, y = Weight, color = Category)
  ) +
  geom_point(alpha = 0.75, size = 0.5) +
  labs(x = "Height(cm)", y = "Weight(kg)", color = "Sport", title = "Height and weight of Olympic athletes \nby sport and gender")

```

```{r}
#| label: only-medalists

data |>
  filter(!is.na(Medal)) |>
  ggplot(
    aes(x = Height, y = Weight, color = Category)
  ) +
  geom_point(alpha = 0.75, size = 0.5) +
  labs(x = "Height(cm)", y = "Weight(kg)", color = "Sport", title = "Height and weight of Olympic medalists \nby sport and gender")

```

```{r}
#| label: medalcolorsvisualization

data |>
  filter(!is.na(Medal)) |>
  ggplot(
    aes(x = Height, y = Weight, color = Medal)) +
  facet_wrap(vars(Category)) +
  geom_point(alpha = 0.5, size = 0.75) +
  scale_color_manual(
    values = c("Gold" = "#FFD700",
               "Silver" = "#C0C0C0",
               "Bronze" = "#CD7F32")) +
  labs(title = "Height and Weight of Olympic Medalists",
  subtitle = "by Sport, Gender, and Medal Won",
       x = "Height(cm)", y = "Weight(kg)", color = "Medal")


```

```{r}
#| label: age-categories

data |>
  mutate(Age_Category = if_else(Age < 13, "Adolescent",
         if_else(Age < 18, "Teenager", 
         if_else(Age < 26, "Young Adult", "Later Adult")))) |>
  ggplot(
    aes( y = Points, fill = Age_Category)
  ) +
  facet_wrap(~ Category) +
  geom_bar(position = "fill")
```

```{r}
#| label: medalpoints

data |>
  filter(Category == "Male Swimming") |>
  group_by(Height) |>
  summarize(medal_success = sum(Points))
```

```{r}
#| label: heightdata

height_data <- data |>
  group_by(Height, Category) |>
  summarize(medal_success = sum(Points))
```

```{r}
#| label: heightvisualization

height_data |>
  ggplot(
    aes(x = Height, y = medal_success, fill = Category)
  ) +
  facet_wrap(~ Category) +
  geom_col(binwidth = 1)
```

```{r}
#| label: heightmeans

height_data |>
  group_by(Category) |>
  summarize(median = median(Height),
            mean = mean(Height))
```

```{r}
#| label: heightintervals

set.seed(6) 
height_data |>
  group_by(Category) |>
  filter(Category == "Female Swimming") |>
  specify(response = Height) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

height_data |>
  group_by(Category) |>
  filter(Category == "Male Swimming") |>
  specify(response = Height) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

height_data |>
  group_by(Category) |>
  filter(Category == "Female Gymnastics") |>
  specify(response = Height) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

height_data |>
  group_by(Category) |>
  filter(Category == "Male Gymnastics") |>
  specify(response = Height) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))
```

```{r}
#| label: weightdata

weight_data <- data |>
  group_by(Weight, Category) |>
  summarize(medal_success = sum(Points))
```

```{r}
#| label: weightvisualization

weight_data |>
  ggplot(
    aes(x = Weight, y = medal_success, fill = Category)
  ) +
  facet_wrap(~ Category) +
  geom_col(binwidth = 1)
```

```{r}
#| label: weightintervals

set.seed(6) 
weight_data |>
  group_by(Category) |>
  filter(Category == "Female Swimming") |>
  specify(response = Weight) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

weight_data |>
  group_by(Category) |>
  filter(Category == "Male Swimming") |>
  specify(response = Weight) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

weight_data |>
  group_by(Category) |>
  filter(Category == "Female Gymnastics") |>
  specify(response = Weight) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

weight_data |>
  group_by(Category) |>
  filter(Category == "Male Gymnastics") |>
  specify(response = Weight) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))
```

```{r}
#| label: agedata

age_data <- data |>
  group_by(Age, Category) |>
  summarize(medal_success = sum(Points))
```

```{r}
#| label: agevisualization

age_data |>
  ggplot(
    aes(x = Age, y = medal_success, fill = Category)
  ) +
  facet_wrap(~ Category) +
  geom_col(binwidth = 1)
```

```{r}
#| label: weightmeans

weight_data |>
  group_by(Category) |>
  summarize(median = median(Weight),
            mean = mean(Weight))
```

```{r}
#| label: agemeans

age_data |>
  group_by(Category) |>
  summarize(median = median(Age),
            mean = mean(Age))
```

```{r}
#| label: ageintervals 

set.seed(6) 
age_data |>
  group_by(Category) |>
  filter(Category == "Female Swimming") |>
  specify(response = Age) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

age_data |>
  group_by(Category) |>
  filter(Category == "Male Swimming") |>
  specify(response = Age) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

age_data |>
  group_by(Category) |>
  filter(Category == "Female Gymnastics") |>
  specify(response = Age) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))

age_data |>
  group_by(Category) |>
  filter(Category == "Male Gymnastics") |>
  specify(response = Age) |>
  generate(reps = 5000, type = "bootstrap") |>
  calculate (stat = "mean") |>
    summarize(lower = quantile(stat, .005),
              upper = quantile(stat, .995))
```

HYPOTHESIS TEST : true mean heights of medal winners / non medal winners are / are not equal

Hypotheses in proper notation:

For each sport:

$H_O: \mu_{med-height} - \mu_{no-med-height} = 0$

$H_A: \mu_{med-height} - \mu_{no-med-height} \neq 0$

```{r}
#| label: hypotestingheight

medaldata <- data |>
  mutate(Medal2 = case_when(Points == 1 ~ "medal",
                            Points == 2 ~ "medal",
                            Points == 3 ~ "medal",
                            Points == 0 ~ "no medal"))
  
medaldata |>
  group_by(Category, Medal2) |>
  summarize(meanheight = mean(Height))

null_distfg <- medaldata |>
  filter(Category == "Female Gymnastics") |>
  specify(response = Height, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distfg |>
  get_p_value(obs_stat = -1.11, direction = "two sided")

null_distmg <- medaldata |>
  filter(Category == "Male Gymnastics") |>
  specify(response = Height, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distmg |>
  get_p_value(obs_stat = -1.68, direction = "two sided")

null_distfs <- medaldata |>
  filter(Category == "Female Swimming") |>
  specify(response = Height, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distfs |>
  get_p_value(obs_stat = 3.19, direction = "two sided")

null_distms <- medaldata |>
  filter(Category == "Male Swimming") |>
  specify(response = Height, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distms |>
  get_p_value(obs_stat = 3.17, direction = "two sided")

```

all p values \< 0.01 so strong evidence there is a difference in height between medal and non medal winners. (medal gymnasts were shorter, medal swimmers were taller)

One-sided p-value tests to verify final two conclusions:

Notation:

Gymnastics:

$H_O: \mu_{med-height} - \mu_{no-med-height} = 0$

$H_A: \mu_{med-height} - \mu_{no-med-height} < 0$

Swimming:

$H_O: \mu_{med-height} - \mu_{no-med-height} = 0$

$H_A: \mu_{med-height} - \mu_{no-med-height} > 0$

```{r}
#|label: one-sidedheight

null_distfg |>
  get_p_value(obs_stat = -1.11, direction = "less")
null_distfs |>
  get_p_value(obs_stat = 3.19, direction = "greater")
null_distmg |>
  get_p_value(obs_stat = -1.68, direction = "less")
null_distms |>
  get_p_value(obs_stat = 3.17, direction = "greater")

```

Dataviz for the above tests:

```{r}
#| label: viz-null-dist-height

visualize(null_distfg) +
  shade_p_value(obs_stat = -1.11, direction = "less") +
  labs(title = "Height of Female Gymnasts")
visualize(null_distfs) +
  shade_p_value(obs_stat = 3.19, direction = "greater") +
  labs(title = "Height of Female Swimmers ")
visualize(null_distmg) +
  shade_p_value(obs_stat = -1.68, direction = "less") +
  labs(title = "Height of Male Gymnasts")
visualize(null_distms) +
  shade_p_value(obs_stat = 3.17, direction = "greater") +
  labs(title = "Height of Male Swimmers")

```

Notation:

For each sport:

$H_O: \mu_{med-weight} - \mu_{no-med-weight} = 0$

$H_A: \mu_{med-weight} - \mu_{no-med-weight} \neq 0$

```{r}
#| label: hypotestingweight

medaldata |>
  group_by(Category, Medal2) |>
  summarize(meanweight = mean(Weight))

null_distfg2 <- medaldata |>
  filter(Category == "Female Gymnastics") |>
  specify(response = Weight, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distfg2 |>
  get_p_value(obs_stat = -1.54, direction = "two sided")

null_distmg2 <- medaldata |>
  filter(Category == "Male Gymnastics") |>
  specify(response = Weight, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distmg2 |>
  get_p_value(obs_stat = -1.57, direction = "two sided")

null_distfs2 <- medaldata |>
  filter(Category == "Female Swimming") |>
  specify(response = Weight, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distfs2 |>
  get_p_value(obs_stat = 3, direction = "two sided")

null_distms2 <- medaldata |>
  filter(Category == "Male Swimming") |>
  specify(response = Weight, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distms2 |>
  get_p_value(obs_stat = 3.81, direction = "two sided")

```

all p values \< 0.01 so strong evidence there is a difference in weight between medal and non medal winners. (medal gymnasts were lighter, medal swimmers were heavier)

One sided p-tests:

For gymnastics:

$H_O: \mu_{med-weight} - \mu_{no-med-weight} = 0$

$H_A: \mu_{med-weight} - \mu_{no-med-weight} < 0$

For swimming:

$H_O: \mu_{med-weight} - \mu_{no-med-weight} > 0$

$H_A: \mu_{med-weight} - \mu_{no-med-weight} > 0$

```{r}
#| label: one-sided-weight

null_distfg2 |>
  get_p_value(obs_stat = -1.54, direction = "less")
null_distfs2 |>
  get_p_value(obs_stat = 3, direction = "greater")
null_distmg2 |>
  get_p_value(obs_stat = -1.57, direction = "less")
null_distms2 |>
  get_p_value(obs_stat = 3.81, direction = "greater")

```

Dataviz for weight:

```{r}
#| label: dataviz-weight

visualize(null_distfg2) +
  shade_p_value(obs_stat = -1.54, direction = "less") +
  labs(title = "Weight of Female Gymnasts")
visualize(null_distfs2) +
  shade_p_value(obs_stat = 3, direction = "greater") +
  labs(title = "Weight of Female Swimmers")
visualize(null_distmg2) +
  shade_p_value(obs_stat = -1.57, direction = "less") +
  labs(title = "Weight of Male Gymnasts")
visualize(null_distms2) +
  shade_p_value(obs_stat = 3.81, direction = "greater") +
  labs(title = "Weight of Male Swimmers")
```

Hypothesis test notation (for each sport):

$H_O: \mu_{med-age} - \mu_{no-med-age} = 0$

$H_A: \mu_{med-age} - \mu_{no-med-age} \neq 0$

```{r}
#| label: hypotestingage

medaldata |>
  group_by(Category, Medal2) |>
  summarize(meanage = mean(Age))

null_distfg3 <- medaldata |>
  filter(Category == "Female Gymnastics") |>
  specify(response = Age, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distfg3 |>
  get_p_value(obs_stat = 0.49, direction = "two sided")

null_distmg3 <- medaldata |>
  filter(Category == "Male Gymnastics") |>
  specify(response = Age, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distmg3 |>
  get_p_value(obs_stat = 0.07, direction = "two sided")

null_distfs3 <- medaldata |>
  filter(Category == "Female Swimming") |>
  specify(response = Age, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distfs3 |>
  get_p_value(obs_stat = 0.47, direction = "two sided")

null_distms3 <- medaldata |>
  filter(Category == "Male Swimming") |>
  specify(response = Age, explanatory = Medal2) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means",  order = c("medal", "no medal"))

null_distms3 |>
  get_p_value(obs_stat = 0.58, direction = "two sided")
```

Notation for each sport:

$H_O: \mu_{med-age} - \mu_{no-med-age} = 0$

$H_A: \mu_{med-age} - \mu_{no-med-age} > 0$

```{r}
#| label: one-sided-age

null_distfg3 |>
  get_p_value(obs_stat = 0.49, direction = "greater")
null_distfs3 |>
  get_p_value(obs_stat = 0.47, direction = "greater")
null_distmg3 |>
  get_p_value(obs_stat = 0.07, direction = "greater")
null_distms3 |>
  get_p_value(obs_stat = 0.58, direction = "greater")

```

Dataviz for age:

```{r}
#| label: dataviz-age

visualize(null_distfg3) +
  shade_p_value(obs_stat = 0.49, direction = "greater") +
  labs(title = "Age of Female Gymnasts")
visualize(null_distfs3) +
  shade_p_value(obs_stat = 0.47, direction = "greater") +
  labs(title = "Age of Female Swimmers")
visualize(null_distmg3) +
  shade_p_value(obs_stat = 0.07, direction = "greater") +
  labs(title = "Age of Male Gymnasts")
visualize(null_distms3) +
  shade_p_value(obs_stat = 0.58, direction = "greater") +
  labs(title = "Age of Male Swimmers")
```

only strong evidence for female gymnasts, female swimmers, and male swimmers for a difference in true mean age between medal winners and non medal winners, no strong evidence for difference between medal winners and non medal winners in male gymnastics because p-value was \> 0.01 (for all the medal winners are slightly older).

# RESULTS

Based on our visualizations, numerous conclusions can be made. We have not only found the sample means but the true population parameter with a 99% confidence interval by sport for height, weight, and age for the statistic that leads to the most medal success. We can use this data later to make our point about the ideal heights, weights, and ages, for Male Swimming, Female Swimming, Male Gymnastics, and Female Gymnastics in the Olympics. Across both sports and genders, there is a positive linear relationship between height and weight. The female gymnasts appear to be both the shortest and lightest on average, while the male swimmers appear to be both the tallest and heaviest on average. Interestingly, the male gymnasts and female swimmers appear to have fairly similar heights and weights on average.

We used hypothesis testing to assess the difference in mean heights, weights, and ages between the medal winning and non medal winning populations of each of the four sport/gender combinations. Based on these tests, there is strong evidence to support that with each sport and gender, there is a difference in the true means of the variables height and weight between medal winners and non-medal winners. This conclusion is based on the p-values, all of which were less than the significance level of 0.01. In general, medal-winning gymnasts of both genders were on average shorter and lighter than non-medal winners, while medal-winning swimmers of both genders were on average taller and heavier than non-medal winners. For the variable of age, all but male gymnasts showed a p-value of less than 0.01 and therefore evidence to support a difference in true mean ages between medal winners and non-medal winners. Across all sports and genders, the medal-winning athletes were older on average than non-medal winners. Taken as a whole, these hypothesis tests answer our overall research question by providing evidence to support there is a significant difference in the physical characteristics of the most successful Olympic athletes.
