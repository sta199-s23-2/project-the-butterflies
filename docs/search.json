[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Team member 1: Carly Blank is a first year student at Duke.\nTeam member 2: Catherine Purnell is a third year student at Duke.\nTeam member 3: Dolce Feenaghty is a first year student at Duke.\nTeam member 4: Ryan Silver is a first year student at Duke."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The Butterflies",
    "section": "",
    "text": "This project researched the physical characteristics of Olympic athletes in the sports of Swimming and Gymnastics, using a dataset including Olympic results from 1896 to 2016. From our analysis we determined the general intervals of ideal height, weight, and age for male and female gymnasts and swimmers. Additionally, we concluded that there was strong evidence to support the hypothesis that there are overall differences between the average body types of medal winning and non medal winning athletes for each of the sports and genders."
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Project title",
    "section": "",
    "text": "library(tidyverse)\n#CollegeBasketballPlayers2009_2021 <- read_csv(\"CollegeBasketballPlayers2009-2021.csv\")\n\n#top_spotify_songs <- read_csv(\"songs_normalize 3.csv\")\n\n#olympic_data <- read_csv(\"athlete_events.csv\")"
  },
  {
    "objectID": "proposal.html#introduction-and-data",
    "href": "proposal.html#introduction-and-data",
    "title": "Project title",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nIdentify the source of the data.\nThe College Basketball Players 2009-2021 dataset is from Kaggle (https://www.kaggle.com/datasets/adityak2003/college-basketball-players-20092021)\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\nThe data was collected by Bart Torvik (barttorvik.com)\nWrite a brief description of the observations.\nThe observations give 65 variables related to college basketball for college basketball players from 2009-2021. Each of the 61,000 observations is one season by one player."
  },
  {
    "objectID": "proposal.html#research-question",
    "href": "proposal.html#research-question",
    "title": "Project title",
    "section": "Research question",
    "text": "Research question\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\n\nHow do various college basketball playing statistics influence players’ NBA draft pick? Which statistic (efficiency rating, total points, shooting percentage, etc) is the best predictor of being a #1 or top 10 pick in the NBA draft?\n\nA description of the research topic along with a concise statement of your hypotheses on this topic.\n\nThe research topic is performance statistics of players in college basketball and the potential association with draft picks. We hypothesize that efficiency rating will be the best predictor of draft pick with a higher efficiency rating predicting a lower numerical draft pick. Performance statistics to be considered were chosen based on general basketball knowledge and will be tested using linear regression models.\n\nIdentify the types of variables in your research question. Categorical? Quantitative?\n\nThe majority of the variables are quantitative such as average or total points, steals, blocks, etc but there are also some categorical variables, such as year in school, team, and conference. For the response variable ‘pick’, observations with ’NA’s will be removed from the data set."
  },
  {
    "objectID": "proposal.html#literature",
    "href": "proposal.html#literature",
    "title": "Project title",
    "section": "Literature",
    "text": "Literature\n\nFind one published credible article on the topic you are interested in researching.\n\nhttps://www.playingnumbers.com/2020/03/using-ncaa-stats-to-predict-nba-draft-order/\n\nProvide a one paragraph summary about the article.\n\nThis article discussed two potential models which were created in attempts to predict draft order based on college statistics. One of the models included data for the players from only that season before the draft in question, while the other model included data of every season the player played in college before entering the draft. One strong predictor these models found was age, with freshman predicted and actually drafted higher on average and players drafted lower each subsequent year. However, one problem the article mentions in using college statistics to predict NBA draft picks is that because many prospects are drafted based on potential, there were often freshman with worse statistics that were drafted higher because NBA teams may have believed they had underdeveloped talent, as opposed to players with better statistics who the NBA teams may have viewed as having already reached their peak ability.\n\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited.\n\nOur research question is different than the article because it includes many more extensive variables than mentioned in the article, such as breaking down shots by dunks, rim shots, and midrange shots, along with categorizations such as conference which may influence players’ success, so we will be able to look for more potential specific trends based on the numerous variables available."
  },
  {
    "objectID": "proposal.html#glimpse-of-data",
    "href": "proposal.html#glimpse-of-data",
    "title": "Project title",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\n#glimpse(CollegeBasketballPlayers2009_2021)"
  },
  {
    "objectID": "proposal.html#introduction-and-data-1",
    "href": "proposal.html#introduction-and-data-1",
    "title": "Project title",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nIdentify the source of the data.\nThis is the Top Spotify hits from 2000-2019, top_spotify_songs, from Kaggle. https://www.kaggle.com/datasets/paradisejoy/top-hits-spotify-from-20002019\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\nThe data was collected by Mark Koverha on Kaggle.\nWrite a brief description of the observations.\nThis data set has 2000 observations and 16 columns of unique data sets (non-identifiers)."
  },
  {
    "objectID": "proposal.html#research-question-1",
    "href": "proposal.html#research-question-1",
    "title": "Project title",
    "section": "Research question",
    "text": "Research question\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\nDo the three most popular songs in any given year have the highest danceability ratings?\nA description of the research topic along with a concise statement of your hypotheses on this topic.\nThis research topic is on the correlation between popular songs being the most danceable, and any trends in this over time. For this, our hypothesis is that the higher the danceability rating is, the more popular the song is going to be.\nIdentify the types of variables in your research question. Categorical? Quantitative?\nThese variables in this research question are both quantitative and categorical, danceability and popularity are both quantitative for this set, and year is categorical."
  },
  {
    "objectID": "proposal.html#literature-1",
    "href": "proposal.html#literature-1",
    "title": "Project title",
    "section": "Literature",
    "text": "Literature\n\nFind one published credible article on the topic you are interested in researching.\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC5990848/\nProvide a one paragraph summary about the article.\nThis article discusses trends in the popularity of music, as using characteristics of the song. The analysis uses 12 binary variables, including danceability, and 6 categorical variables. The analysis was also two-parted, the first was to analyze trends in the data, then the second part sought to discover if it was possible to predict the success of songs. The data found that overall trends in happiness and brightness in the music decreased in popularity over time, while danceability and genres such as electronic increased in popularity. The researchers were not able to predict more than 74% of “successful” songs in a given year, indicating that while these trends were part of the success of a song, they did not account for all of them.\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited.\nOur question is different because it focuses on this one variable, which is not binary in our data frame, and uses this to discover trends in popularity over time. As we have a more complex rating scale for our danceability and we are using popularity on Spotify charts rather than a success rating, we hope that our research will allow a more in-depth analysis of this trend than the previous research."
  },
  {
    "objectID": "proposal.html#glimpse-of-data-1",
    "href": "proposal.html#glimpse-of-data-1",
    "title": "Project title",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\n#glimpse(top_spotify_songs)"
  },
  {
    "objectID": "proposal.html#introduction-and-data-2",
    "href": "proposal.html#introduction-and-data-2",
    "title": "Project title",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nIdentify the source of the data.\n\nhttps://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results\n\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\n\nData was scraped and wrangled using r off of www.sports-reference.com by Randi H. Griffin.\n\nWrite a brief description of the observations.\n\nThere are 15 columns and 271,116 rows. Each row repesents a different olympic athlete throughout the history of the olympics, while each column represents a different variable about that athlete, like year, country, medal, etc."
  },
  {
    "objectID": "proposal.html#research-question-2",
    "href": "proposal.html#research-question-2",
    "title": "Project title",
    "section": "Research question",
    "text": "Research question\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\n\nHow do factors like age, height, and weight correlate with medal success rate across the different sports?\n\nA description of the research topic along with a concise statement of your hypotheses on this topic.\n\nFor this research topic, we would have to take a look at which ages, heights, and weights have received medals. I would hypothesize that for each separate sport, there is a different normal distribution for ages, heights, and weights that have medal success rates, with an ideal age, height, and weight for each individual sport.\nWe would have to talk about this as a group, but I imagine we would pick a specific sport and then only use athletes from that sport. Ex: gymnastics.\nMetal success rate would be based on if the athlete wins a medal. For example, a gold medal could be worth 3 points, a silver medal could be worth 2 points, and a bronze medal could be worth 1 point. No medal doesn’t get any points, though those athletes are still included. The sports that we select would be whichever sports that we find interesting, though we could choose a few different sports. We still need to talk about the specifics of which sport but the ideas would generally be the same. Basically, we would categorize each sport by individual heights, ages and weights. We will then count up the total number of points for that height and compare heights to each other. By finding the height with the highest number of points (medal success rate), we can then see which is the “ideal” heights, weights, and ages for those that we choose. Additionally, we will compare the heights with each other to find a distribution of points categorized by height, weight, and age. If anything is still unclear, don’t hesitate to send another message!\n\nIdentify the types of variables in your research question. Categorical? Quantitative?\n\nMy research question would involve the age (quantitative), height (quantitative), weight (quantitative), sport (categorical), and medal (categorical).\nLiterature\n\nFind one published credible article on the topic you are interested in researching.\n\nhttps://slate.com/culture/2016/08/why-female-gymnasts-are-so-short.html\n\nProvide a one paragraph summary about the article.\n\nThis article talks about the fact that the average height of Olympic female gymnasts have been getting shorter. 30 years ago, they were about 5 foot 3, but today they average out at about 4 foot 9. This is due to the fact of the advantage in gymnastics of being short. With a lower center of inertia, a higher power-weight ratio, and an easier time rotating in the air, it makes sense that gymnasts are better off smaller. The article finishes off by questioning if the average height will continue to decrease.\n\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited.\n\nThis talks about the average height for womens gymnastics. Our research question is different because we will be looking at which heights have the higher medal success rate, not just which heights exist in the olympics. Hopefully, by taking into account the earned medals, we will depict an even more accurate understanding of which heights are most likely to succeed."
  },
  {
    "objectID": "proposal.html#literature-2",
    "href": "proposal.html#literature-2",
    "title": "Project title",
    "section": "Literature",
    "text": "Literature\n\nFind one published credible article on the topic you are interested in researching.\nProvide a one paragraph summary about the article.\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited."
  },
  {
    "objectID": "proposal.html#glimpse-of-data-2",
    "href": "proposal.html#glimpse-of-data-2",
    "title": "Project title",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\n#glimpse(olympic_data)"
  },
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "Project title",
    "section": "",
    "text": "library(tidyverse)\nlibrary(tidymodels)"
  },
  {
    "objectID": "report.html#methodology",
    "href": "report.html#methodology",
    "title": "Project title",
    "section": "METHODOLOGY",
    "text": "METHODOLOGY\nvisualizations and summary statistics relevant to your research question\njustify the choice of statistical method(s) used to answer your research question"
  },
  {
    "objectID": "report.html#results",
    "href": "report.html#results",
    "title": "Project title",
    "section": "RESULTS",
    "text": "RESULTS\nshowcase how you arrived at answers to your research question using the techniques we have learned in class\nprovide only the main results from your analysis\ndemonstrate that you are proficient at asking meaningful questions and answering them using data\nthat you are skilled in interpreting and presenting results\nand that you can accomplish these tasks using R"
  },
  {
    "objectID": "report.html#introduction---done",
    "href": "report.html#introduction---done",
    "title": "Project title",
    "section": "INTRODUCTION - DONE",
    "text": "INTRODUCTION - DONE\nFor this research project, we chose the topic of Olympic athletes from the sports of Swimming and Gymnastics. We are looking into the specific variables of age, height, and weight to see how these affect performance at a high level, and how these vary across the two sports. As such, our research question is: how do factors like age, height, and weight correlate with medal success rate across gymnastics and swimming? For this question, we hypothesize that the ideal height, weight, and age to win a medal will all be greater in swimming than in gymnastics.\nTo answer this research question, we will use the relevant variables of age, height, weight, medal won, sex, and sport. The numerical variables are age (in years), height (in centimeters), and weight (in kilograms). The character variables we are using are medal won, sex, and sport. For our analysis, we will filter the data set to only include gymnastics and swimming, the sports we are interested in analyzing.\nWe found this data set online at Kaggle, but the original data was from www.sports-reference.com. It was researched by a group of Olympic history enthusiasts and compiled into the data set format using R by Randi H. Griffin. The data was uploaded to the Kaggle website in 2018.\nUsing this data set, there are minimal to no ethical concerns, as this data was collected from a publicly accessible site. Additionally, all of this data was able be compiled by anyone, as Olympic athletes and their medals are also public information. We did not interview or collect any information ourselves, and their is no private health information or other private information available in this data. As such, there are no risks to the participants in our data collection and use of this data.\nEach case in this data set corresponds to an individual athlete competing in an individual Olympic event between the years of 1896 and 2016. While we are only using the variables described above, this data set also includes team, year, games, city, and event for each case.\nFor this research topic, we will have to view which ages, heights, and weights have received medals. I would hypothesize that for each separate sport, there is a different normal distribution for ages, heights, and weights that have medal success rates, showing an ideal age, height, and weight for each sport we visualize."
  },
  {
    "objectID": "report.html#justify-the-choice-of-statistical-methods-used-to-answer-your-research-question",
    "href": "report.html#justify-the-choice-of-statistical-methods-used-to-answer-your-research-question",
    "title": "Project title",
    "section": "justify the choice of statistical method(s) used to answer your research question",
    "text": "justify the choice of statistical method(s) used to answer your research question\nTo answer our research question, we used statistical methods of using our olympic data set and filtering it to only include the sports Female and Male Gymnastics, and Female and Male Swimming. From there, we filtered by only the rows that have Ages, Heights, and Weights. We then mapped out the height and weight for every olympian in these sports, then only the medalists, and finally faceted by which medal the olympians won. From there, using only the medalists, we found the mean and median of each category and height, weight, and age and visualized the mean. We also found a 99% confidence interval using the bootstrap method for the true population parameter of each of theses subcategories.\n\nolympic_data <- read_csv(\"athlete_events.csv\")\n\n\ndata <- olympic_data |>\n  filter(Sport == \"Swimming\" | Sport == \"Gymnastics\") |>\n  select(Sex, Age, Height, Weight, Medal, Sport) |>\n  filter(!is.na(Age)) |>\n  filter(!is.na(Height)) |>\n  filter(!is.na(Weight)) |>\n  mutate(Category = case_when(\n    Sex == \"F\" & Sport == \"Gymnastics\" ~ \"Female Gymnastics\",\n    Sex == \"F\" & Sport == \"Swimming\" ~ \"Female Swimming\",\n    Sex == \"M\" & Sport == \"Gymnastics\" ~ \"Male Gymnastics\",\n    Sex == \"M\" & Sport == \"Swimming\" ~ \"Male Swimming\")) |>\n  mutate(Points = case_when(Medal == \"Gold\" ~ 3,\n                            Medal == \"Silver\" ~ 2,\n                            Medal == \"Bronze\" ~ 1,\n                            is.na(Medal) ~ 0)) \n\ndata\n\n# A tibble: 37,047 × 8\n   Sex     Age Height Weight Medal  Sport      Category        Points\n   <chr> <dbl>  <dbl>  <dbl> <chr>  <chr>      <chr>            <dbl>\n 1 M        28    175     64 Bronze Gymnastics Male Gymnastics      1\n 2 M        28    175     64 Gold   Gymnastics Male Gymnastics      3\n 3 M        28    175     64 <NA>   Gymnastics Male Gymnastics      0\n 4 M        28    175     64 Gold   Gymnastics Male Gymnastics      3\n 5 M        28    175     64 <NA>   Gymnastics Male Gymnastics      0\n 6 M        28    175     64 <NA>   Gymnastics Male Gymnastics      0\n 7 M        28    175     64 <NA>   Gymnastics Male Gymnastics      0\n 8 M        28    175     64 Gold   Gymnastics Male Gymnastics      3\n 9 M        32    175     64 <NA>   Gymnastics Male Gymnastics      0\n10 M        32    175     64 Bronze Gymnastics Male Gymnastics      1\n# … with 37,037 more rows\n\n\n\ndata |>\n  ggplot(\n    aes(x = Height, y = Weight, color = Category)\n  ) +\n  geom_point(alpha = 0.75, size = 0.5) +\n  labs(x = \"Height(cm)\", y = \"Weight(kg)\", color = \"Sport\", title = \"Height and weight of Olympic athletes \\nby sport and gender\")\n\n\n\n\n\ndata |>\n  filter(!is.na(Medal)) |>\n  ggplot(\n    aes(x = Height, y = Weight, color = Category)\n  ) +\n  geom_point(alpha = 0.75, size = 0.5) +\n  labs(x = \"Height(cm)\", y = \"Weight(kg)\", color = \"Sport\", title = \"Height and weight of Olympic medalists \\nby sport and gender\")\n\n\n\n\n\ndata |>\n  filter(!is.na(Medal)) |>\n  ggplot(\n    aes(x = Height, y = Weight, color = Medal)) +\n  facet_wrap(vars(Category)) +\n  geom_point(alpha = 0.5, size = 0.75) +\n  scale_color_manual(\n    values = c(\"Gold\" = \"#FFD700\",\n               \"Silver\" = \"#C0C0C0\",\n               \"Bronze\" = \"#CD7F32\")) +\n  labs(title = \"Height and Weight of Olympic Medalists\",\n  subtitle = \"by Sport, Gender, and Medal Won\",\n       x = \"Height(cm)\", y = \"Weight(kg)\", color = \"Medal\")\n\n\n\n\n\n#what do yall think of the categories...?? Struggled w names a bit\ndata |>\n  mutate(Age_Category = if_else(Age < 13, \"Adolescent\",\n         if_else(Age < 18, \"Teenager\", \n         if_else(Age < 26, \"Young Adult\", \"Later Adult\")))) |>\n  ggplot(\n    aes( y = Points, fill = Age_Category)\n  ) +\n  facet_wrap(~ Category) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\ndata |>\n  filter(Category == \"Male Swimming\") |>\n  group_by(Height) |>\n  summarize(medal_success = sum(Points))\n\n# A tibble: 58 × 2\n   Height medal_success\n    <dbl>         <dbl>\n 1    147             0\n 2    150             0\n 3    152             3\n 4    153             0\n 5    155             3\n 6    157             0\n 7    158             2\n 8    159             0\n 9    160             3\n10    161             0\n# … with 48 more rows\n\n\n\nheight_data <- data |>\n  group_by(Height, Category) |>\n  summarize(medal_success = sum(Points))\n\n`summarise()` has grouped output by 'Height'. You can override using the\n`.groups` argument.\n\n\n\nheight_data |>\n  ggplot(\n    aes(x = Height, y = medal_success, fill = Category)\n  ) +\n  facet_wrap(~ Category) +\n  geom_col(binwidth = 1)\n\nWarning in geom_col(binwidth = 1): Ignoring unknown parameters: `binwidth`\n\n\n\n\n\n\nheight_data |>\n  group_by(Category) |>\n  summarize(median = median(Height),\n            mean = mean(Height))\n\n# A tibble: 4 × 3\n  Category          median  mean\n  <chr>              <dbl> <dbl>\n1 Female Gymnastics   154   154.\n2 Female Swimming     168.  168.\n3 Male Gymnastics     168.  169.\n4 Male Swimming       180.  180.\n\n\n\nset.seed(6) \nheight_data |>\n  group_by(Category) |>\n  filter(Category == \"Female Swimming\") |>\n  specify(response = Height) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  162.  173.\n\nheight_data |>\n  group_by(Category) |>\n  filter(Category == \"Male Swimming\") |>\n  specify(response = Height) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  174.  186.\n\nheight_data |>\n  group_by(Category) |>\n  filter(Category == \"Female Gymnastics\") |>\n  specify(response = Height) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  149.  159.\n\nheight_data |>\n  group_by(Category) |>\n  filter(Category == \"Male Gymnastics\") |>\n  specify(response = Height) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  164.  173.\n\n\n\nweight_data <- data |>\n  group_by(Weight, Category) |>\n  summarize(medal_success = sum(Points))\n\n`summarise()` has grouped output by 'Weight'. You can override using the\n`.groups` argument.\n\n\n\nweight_data |>\n  ggplot(\n    aes(x = Weight, y = medal_success, fill = Category)\n  ) +\n  facet_wrap(~ Category) +\n  geom_col(binwidth = 1)\n\nWarning in geom_col(binwidth = 1): Ignoring unknown parameters: `binwidth`\n\n\n\n\n\n\nset.seed(6) \nweight_data |>\n  group_by(Category) |>\n  filter(Category == \"Female Swimming\") |>\n  specify(response = Weight) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  56.4  65.1\n\nweight_data |>\n  group_by(Category) |>\n  filter(Category == \"Male Swimming\") |>\n  specify(response = Weight) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  72.1  83.6\n\nweight_data |>\n  group_by(Category) |>\n  filter(Category == \"Female Gymnastics\") |>\n  specify(response = Weight) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  42.9  52.6\n\nweight_data |>\n  group_by(Category) |>\n  filter(Category == \"Male Gymnastics\") |>\n  specify(response = Weight) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  62.5  71.9\n\n\n\nage_data <- data |>\n  group_by(Age, Category) |>\n  summarize(medal_success = sum(Points))\n\n`summarise()` has grouped output by 'Age'. You can override using the `.groups`\nargument.\n\n\n\nage_data |>\n  ggplot(\n    aes(x = Age, y = medal_success, fill = Category)\n  ) +\n  facet_wrap(~ Category) +\n  geom_col(binwidth = 1)\n\nWarning in geom_col(binwidth = 1): Ignoring unknown parameters: `binwidth`\n\n\n\n\n\n\nweight_data |>\n  group_by(Category) |>\n  summarize(median = median(Weight),\n            mean = mean(Weight))\n\n# A tibble: 4 × 3\n  Category          median  mean\n  <chr>              <dbl> <dbl>\n1 Female Gymnastics   48    47.7\n2 Female Swimming     60.8  60.8\n3 Male Gymnastics     66.5  67.0\n4 Male Swimming       77.2  77.9\n\n\n\nage_data |>\n  group_by(Category) |>\n  summarize(median = median(Age),\n            mean = mean(Age))\n\n# A tibble: 4 × 3\n  Category          median  mean\n  <chr>              <dbl> <dbl>\n1 Female Gymnastics   24.5  24.8\n2 Female Swimming     25    25.1\n3 Male Gymnastics     28    28.2\n4 Male Swimming       26    26  \n\n\n\nset.seed(6) \nage_data |>\n  group_by(Category) |>\n  filter(Category == \"Female Swimming\") |>\n  specify(response = Age) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  21.1    29\n\nage_data |>\n  group_by(Category) |>\n  filter(Category == \"Male Swimming\") |>\n  specify(response = Age) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  22.1  29.9\n\nage_data |>\n  group_by(Category) |>\n  filter(Category == \"Female Gymnastics\") |>\n  specify(response = Age) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  21.2  28.8\n\nage_data |>\n  group_by(Category) |>\n  filter(Category == \"Male Gymnastics\") |>\n  specify(response = Age) |>\n  generate(reps = 5000, type = \"bootstrap\") |>\n  calculate (stat = \"mean\") |>\n    summarize(lower = quantile(stat, .005),\n              upper = quantile(stat, .995))\n\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  24.6  32.0\n\n\nHYPOTHESIS TEST : true mean heights of medal winners / non medal winners are / are not equal\nHypotheses in proper notation:\nFor each sport:\n\\(H_O: \\mu_{med-height} - \\mu_{no-med-height} = 0\\)\n\\(H_A: \\mu_{med-height} - \\mu_{no-med-height} \\neq 0\\)\n\n#| label: hypotestingheight\n\nmedaldata <- data |>\n  mutate(Medal2 = case_when(Points == 1 ~ \"medal\",\n                            Points == 2 ~ \"medal\",\n                            Points == 3 ~ \"medal\",\n                            Points == 0 ~ \"no medal\"))\n  \nmedaldata |>\n  group_by(Category, Medal2) |>\n  summarize(meanheight = mean(Height))\n\n`summarise()` has grouped output by 'Category'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 3\n# Groups:   Category [4]\n  Category          Medal2   meanheight\n  <chr>             <chr>         <dbl>\n1 Female Gymnastics medal          155.\n2 Female Gymnastics no medal       156.\n3 Female Swimming   medal          174.\n4 Female Swimming   no medal       171.\n5 Male Gymnastics   medal          166.\n6 Male Gymnastics   no medal       168.\n7 Male Swimming     medal          187.\n8 Male Swimming     no medal       184.\n\nnull_distfg <- medaldata |>\n  filter(Category == \"Female Gymnastics\") |>\n  specify(response = Height, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distfg |>\n  get_p_value(obs_stat = -1.11, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distmg <- medaldata |>\n  filter(Category == \"Male Gymnastics\") |>\n  specify(response = Height, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distmg |>\n  get_p_value(obs_stat = -1.68, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distfs <- medaldata |>\n  filter(Category == \"Female Swimming\") |>\n  specify(response = Height, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distfs |>\n  get_p_value(obs_stat = 3.19, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distms <- medaldata |>\n  filter(Category == \"Male Swimming\") |>\n  specify(response = Height, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distms |>\n  get_p_value(obs_stat = 3.17, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\n\nall p values < 0.01 so strong evidence there is a difference in height between medal and non medal winners. (medal gymnasts were shorter, medal swimmers were taller)\nOne-sided p-value tests to verify final two conclusions:\nNotation:\nGymnastics:\n\\(H_O: \\mu_{med-height} - \\mu_{no-med-height} = 0\\)\n\\(H_A: \\mu_{med-height} - \\mu_{no-med-height} < 0\\)\nSwimming:\n\\(H_O: \\mu_{med-height} - \\mu_{no-med-height} = 0\\)\n\\(H_A: \\mu_{med-height} - \\mu_{no-med-height} > 0\\)\n\n#|label: one-sided\n\nnull_distfg |>\n  get_p_value(obs_stat = -1.11, direction = \"less\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distfs |>\n  get_p_value(obs_stat = 3.19, direction = \"greater\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distmg |>\n  get_p_value(obs_stat = -1.68, direction = \"less\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distms |>\n  get_p_value(obs_stat = 3.17, direction = \"greater\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\n\nDataviz for the above tests:\n\nvisualize(null_distfg) +\n  shade_p_value(obs_stat = -1.11, direction = \"less\") +\n  labs(title = \"Height of Female Gymnasts\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\nvisualize(null_distfs) +\n  shade_p_value(obs_stat = 3.19, direction = \"greater\") +\n  labs(title = \"Height of Female Swimmers \")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\nvisualize(null_distmg) +\n  shade_p_value(obs_stat = -1.68, direction = \"less\") +\n  labs(title = \"Height of Male Gymnasts\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\nvisualize(null_distms) +\n  shade_p_value(obs_stat = 3.17, direction = \"greater\") +\n  labs(title = \"Height of Male Swimmers\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\n\nNotation:\nFor each sport:\n\\(H_O: \\mu_{med-weight} - \\mu_{no-med-weight} = 0\\)\n\\(H_A: \\mu_{med-weight} - \\mu_{no-med-weight} \\neq 0\\)\n\nmedaldata |>\n  group_by(Category, Medal2) |>\n  summarize(meanweight = mean(Weight))\n\n`summarise()` has grouped output by 'Category'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 3\n# Groups:   Category [4]\n  Category          Medal2   meanweight\n  <chr>             <chr>         <dbl>\n1 Female Gymnastics medal          46.3\n2 Female Gymnastics no medal       47.9\n3 Female Swimming   medal          64.1\n4 Female Swimming   no medal       61.1\n5 Male Gymnastics   medal          61.9\n6 Male Gymnastics   no medal       63.4\n7 Male Swimming     medal          81.4\n8 Male Swimming     no medal       77.6\n\nnull_distfg2 <- medaldata |>\n  filter(Category == \"Female Gymnastics\") |>\n  specify(response = Weight, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distfg2 |>\n  get_p_value(obs_stat = -1.54, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distmg2 <- medaldata |>\n  filter(Category == \"Male Gymnastics\") |>\n  specify(response = Weight, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distmg2 |>\n  get_p_value(obs_stat = -1.57, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distfs2 <- medaldata |>\n  filter(Category == \"Female Swimming\") |>\n  specify(response = Weight, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distfs2 |>\n  get_p_value(obs_stat = 3, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distms2 <- medaldata |>\n  filter(Category == \"Male Swimming\") |>\n  specify(response = Weight, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distms2 |>\n  get_p_value(obs_stat = 3.81, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\n\nall p values < 0.01 so strong evidence there is a difference in weight between medal and non medal winners. (medal gymnasts were lighter, medal swimmers were heavier)\nOne sided p-tests:\nFor gymnastics:\n\\(H_O: \\mu_{med-weight} - \\mu_{no-med-weight} = 0\\)\n\\(H_A: \\mu_{med-weight} - \\mu_{no-med-weight} < 0\\)\nFor swimming:\n\\(H_O: \\mu_{med-weight} - \\mu_{no-med-weight} > 0\\)\n\\(H_A: \\mu_{med-weight} - \\mu_{no-med-weight} > 0\\)\n\nnull_distfg2 |>\n  get_p_value(obs_stat = -1.54, direction = \"less\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distfs2 |>\n  get_p_value(obs_stat = 3, direction = \"greater\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distmg2 |>\n  get_p_value(obs_stat = -1.57, direction = \"less\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\nnull_distms2 |>\n  get_p_value(obs_stat = 3.81, direction = \"greater\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\n\nDataviz for weight:\n\nvisualize(null_distfg2) +\n  shade_p_value(obs_stat = -1.54, direction = \"less\") +\n  labs(title = \"Weight of Female Gymnasts\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\nvisualize(null_distfs2) +\n  shade_p_value(obs_stat = 3, direction = \"greater\") +\n  labs(title = \"Weight of Female Swimmers\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\nvisualize(null_distmg2) +\n  shade_p_value(obs_stat = -1.57, direction = \"less\") +\n  labs(title = \"Weight of Male Gymnasts\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\nvisualize(null_distms2) +\n  shade_p_value(obs_stat = 3.81, direction = \"greater\") +\n  labs(title = \"Weight of Male Swimmers\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\n\nHypothesis test notation (for each sport):\n\\(H_O: \\mu_{med-age} - \\mu_{no-med-age} = 0\\)\n\\(H_A: \\mu_{med-age} - \\mu_{no-med-age} \\neq 0\\)\n\nmedaldata |>\n  group_by(Category, Medal2) |>\n  summarize(meanage = mean(Age))\n\n`summarise()` has grouped output by 'Category'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 3\n# Groups:   Category [4]\n  Category          Medal2   meanage\n  <chr>             <chr>      <dbl>\n1 Female Gymnastics medal       19.2\n2 Female Gymnastics no medal    18.7\n3 Female Swimming   medal       20.0\n4 Female Swimming   no medal    19.5\n5 Male Gymnastics   medal       23.9\n6 Male Gymnastics   no medal    23.8\n7 Male Swimming     medal       22.0\n8 Male Swimming     no medal    21.4\n\nnull_distfg3 <- medaldata |>\n  filter(Category == \"Female Gymnastics\") |>\n  specify(response = Age, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distfg3 |>\n  get_p_value(obs_stat = 0.49, direction = \"two sided\")\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.002\n\nnull_distmg3 <- medaldata |>\n  filter(Category == \"Male Gymnastics\") |>\n  specify(response = Age, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distmg3 |>\n  get_p_value(obs_stat = 0.07, direction = \"two sided\")\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1    0.61\n\nnull_distfs3 <- medaldata |>\n  filter(Category == \"Female Swimming\") |>\n  specify(response = Age, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distfs3 |>\n  get_p_value(obs_stat = 0.47, direction = \"two sided\")\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.002\n\nnull_distms3 <- medaldata |>\n  filter(Category == \"Male Swimming\") |>\n  specify(response = Age, explanatory = Medal2) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\",  order = c(\"medal\", \"no medal\"))\n\nnull_distms3 |>\n  get_p_value(obs_stat = 0.58, direction = \"two sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\n\nNotation for each sport:\n\\(H_O: \\mu_{med-age} - \\mu_{no-med-age} = 0\\)\n\\(H_A: \\mu_{med-age} - \\mu_{no-med-age} > 0\\)\n\nnull_distfg3 |>\n  get_p_value(obs_stat = 0.49, direction = \"greater\")\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.001\n\nnull_distfs3 |>\n  get_p_value(obs_stat = 0.47, direction = \"greater\")\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.001\n\nnull_distmg3 |>\n  get_p_value(obs_stat = 0.07, direction = \"greater\")\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.305\n\nnull_distms3 |>\n  get_p_value(obs_stat = 0.58, direction = \"greater\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\n\nDataviz for age:\n\nvisualize(null_distfg3) +\n  shade_p_value(obs_stat = 0.49, direction = \"greater\") +\n  labs(title = \"Age of Female Gymnasts\")\n\n\n\nvisualize(null_distfs3) +\n  shade_p_value(obs_stat = 0.47, direction = \"greater\") +\n  labs(title = \"Age of Female Swimmers\")\n\n\n\nvisualize(null_distmg3) +\n  shade_p_value(obs_stat = 0.07, direction = \"greater\") +\n  labs(title = \"Age of Male Gymnasts\")\n\n\n\nvisualize(null_distms3) +\n  shade_p_value(obs_stat = 0.58, direction = \"greater\") +\n  labs(title = \"Age of Male Swimmers\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\n\nonly strong evidence for female gymnasts, female swimmers, and male swimmers for a difference in true mean age between medal winners and non medal winners, no strong evidence for difference between medal winners and non medal winners in male gymnastics because p-value was > 0.01 (for all the medal winners are slightly older)."
  }
]